parameters:
	model:
		inheritanceColumns:
			core_element: type
			core_relation: type

services:
#	model.entityFactory: Model\InheritanceEntityFactory('entity.', 'default', ..., %model.inheritanceColumns%)
	model.entityFactory: NiceDAO\DIEntityFactory('entity.', 'default')

	model.project:
		class: Model\Project('core_project')
	model.element:
		class: Model\Element('core_element')
	model.relation:
		class: Model\Relation('core_relation')
	model.note:
		class: Model\BaseChild('core_note', ..., ..., @model.element)
	model.diagram:
		class: Model\Diagram('core_diagram')
	model.placement:
		class: Model\Placement('core_placement')
	model.user:
		class: Model\UserDAO('core_user')


factories:

entity:
	core_element:
		class: Model\Entity\Element
		arguments:
			childTables:
				note: core_note
	core_project: Model\Entity\Project
	core_relation:
		class: Model\Entity\Relation
	core_diagram: Model\Entity\Diagram
	core_placement: Model\Entity\Placement
	core_note: Model\Entity\Note
	core_user: Model\Entity\User
	default: Model\Entity\Base
