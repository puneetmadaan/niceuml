entity:
	class_class: ClassModule\Model\Entity\ClassEntity
	class_association: ClassModule\Model\Entity\Association

services:
	model.class_class: ClassModule\Model\ClassDAO(class_class, ..., ..., @model.element)
	model.class_association: ClassModule\Model\Association(class_association, ..., ..., @model.relation)

	model.elementType:
		setup: [ add(class, Class) ]
	model.relationType:
		setup:
			- add(association, Association, [ class: [class] ])
			- add(generalization, Generalization, [ class: [class] ])
	model.diagramType:
		setup: [ add(class, Class diagram, [class, note]) ]


	model.elementSource:
		setup: [ addType(class, @model.class_class) ]
	model.relationSource:
		setup: [ addType(association, @model.class_association) ]

	elementControlFactory:
		setup: [ addType(class, classModule.classControl) ]
	relationControlFactory:
		setup:
			- addType(association, classModule.associationControl)
			- addType(generalization, relationControl)
	diagramControlFactory:
		setup: [ addType(class, classModule.classDiagramControl) ]

	parser:
		setup: [ addParser( class, ClassModule\Parser() ) ]
	interpreter:
		setup: [ addInterpreter( class, ClassModule\Interpreter() ) ]

factories:
	classModule.classControl: ClassModule\ClassControl
	classModule.associationControl: ClassModule\AssociationControl
	classModule.classDiagramControl: ClassModule\ClassDiagramControl


