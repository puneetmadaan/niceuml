entity:
	class_class: ClassModule\Model\Entity\ClassType
	class_association: ClassModule\Model\Entity\Association
	class_attribute: ClassModule\Model\Entity\Attribute
	class_operation: ClassModule\Model\Entity\Operation

services:
	model.class_class: ClassModule\Model\ClassType(class_class, ..., ..., @model.element)
	model.class_association: ClassModule\Model\Association(class_association, ..., ..., @model.relation)

	elementType:
		setup: [ add(class, Class) ]

	elementControlFactory:
		setup: [ addType(class, classModule.classControl) ]
	relationControlFactory:
		setup:
			- addType(association, classModule.associationControl)
			- addType(generalization, relationControl)
	diagramControlFactory:
		setup: [ addType(class, classModule.classDiagramControl) ]

	parser:
		setup: [ addParser( class, ClassModule\Parser() ) ]
	interpreter:
		setup: [ addInterpreter( class, ClassModule\Interpreter() ) ]

	model.elementSource:
		setup: [ addType(class, @model.class_class) ]
	model.relationSource:
		setup: [ addType(association, @model.class_association) ]
	model.diagramSource:
		setup: [ addType(class) ]

factories:
	newRelationControl:
		setup:
			- add(association, Association, @model.class_association, class, class)
			- add(generalization, Generalization, @model.relation, class, class)
	newDiagramControl:
		setup: [ add(class, Class diagram, @model.diagram) ]

	classModule.classControl:
		class: ClassModule\ClassControl(@model.class_class)


	classModule.classDiagramControl:
		class: ClassModule\ClassDiagramControl(%diagram%, @model.element, @model.relation)
		parameters: [ Model\Entity\Diagram diagram ]

	classModule.associationControl:
		class: ClassModule\AssociationControl(%relation%, @model.class_association)
		parameters: [ Model\Entity\Relation relation ]

